// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}


model User {
  id        String    @id @default(cuid())
  email     String    @unique
  name      String
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model UserSettings {
  userId   String   @id
  currency String
}

model Category {
  id        String    @id @default(cuid())
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt


  userId    String
  name      String
  icon      String
  type      String    @default("active")
    @@unique([name, userId, type])
}

model OpTransaction {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updateAt  DateTime @default(now())

  amount      Float
  description String
  date        DateTime
  userId      String
  type        String   @default("nueva")

  category     String
  categoryIcon String
}

model OpHistory {
  id          String    @id @default(cuid())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  amount      Float
  description String
  date        DateTime
  userId      String
  type        String    @default("active")

  category   String
  categoryIcon  String
}

model MonthHistory {
  userId    String
  day       Int
  month     Int
  year      Int
  isActive  Boolean

  @@id([day, month, year, userId])
}

model YearHistory {
  userId    String
  month     Int
  year      Int
  isActive  Boolean

  @@id([month, year, userId])
}

model OPStatusHistory {
  id          String    @id @default(cuid())
  userId      String
  orderId     String
  prevStatus  String
  newStatus   String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

